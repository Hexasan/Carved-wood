package net.im_maker.paintable.common.block;

import net.im_maker.paintable.common.block.paint_buckets.ColoredPaintBucketBlock;
import net.im_maker.paintable.common.block.paint_buckets.PaintBucketBlock;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.Material;
import net.minecraft.world.level.material.MaterialColor;
import net.minecraftforge.eventbus.api.IEventBus;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;
import net.im_maker.paintable.Paintable;
import net.im_maker.paintable.common.item.ModItems;


import java.util.function.Supplier;

public class ModBlocks {
    public static final DeferredRegister<Block> BLOCKS =
            DeferredRegister.create(ForgeRegistries.BLOCKS, Paintable.MOD_ID);
    //Paint Bucket
    public static final RegistryObject<Block> PAINT_BUCKET = registryBlock("paint_bucket", () -> new PaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.METAL).strength(0.1F, 3.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> RED_PAINT_BUCKET = registryBlock("red_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_RED).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> ORANGE_PAINT_BUCKET = registryBlock("orange_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_ORANGE).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> YELLOW_PAINT_BUCKET = registryBlock("yellow_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_YELLOW).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> LIME_PAINT_BUCKET = registryBlock("lime_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_LIGHT_GREEN).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> GREEN_PAINT_BUCKET = registryBlock("green_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_GREEN).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> CYAN_PAINT_BUCKET = registryBlock("cyan_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_CYAN).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINT_BUCKET = registryBlock("light_blue_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_LIGHT_BLUE).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> BLUE_PAINT_BUCKET = registryBlock("blue_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BLUE).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> PURPLE_PAINT_BUCKET = registryBlock("purple_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_PURPLE).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> MAGENTA_PAINT_BUCKET = registryBlock("magenta_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_MAGENTA).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> PINK_PAINT_BUCKET = registryBlock("pink_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_PINK).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> BROWN_PAINT_BUCKET = registryBlock("brown_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BROWN).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> BLACK_PAINT_BUCKET = registryBlock("black_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_BLACK).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> GRAY_PAINT_BUCKET = registryBlock("gray_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_GRAY).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINT_BUCKET = registryBlock("light_gray_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.COLOR_LIGHT_GRAY).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> WHITE_PAINT_BUCKET = registryBlock("white_paint_bucket", () -> new ColoredPaintBucketBlock(BlockBehaviour.Properties.of(Material.METAL, MaterialColor.SNOW).strength(0.1F, 4.0F).sound(SoundType.LANTERN)), CreativeModeTab.TAB_DECORATIONS);
    //Painted Planks
    public static final RegistryObject<Block> RED_PAINTED_PLANKS = registryBlock("red_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> ORANGE_PAINTED_PLANKS = registryBlock("orange_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> YELLOW_PAINTED_PLANKS = registryBlock("yellow_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_YELLOW).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIME_PAINTED_PLANKS = registryBlock("lime_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GREEN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GREEN_PAINTED_PLANKS = registryBlock("green_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GREEN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> CYAN_PAINTED_PLANKS = registryBlock("cyan_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_CYAN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_PLANKS = registryBlock("light_blue_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_BLUE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLUE_PAINTED_PLANKS = registryBlock("blue_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLUE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PURPLE_PAINTED_PLANKS = registryBlock("purple_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PURPLE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> MAGENTA_PAINTED_PLANKS = registryBlock("magenta_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_MAGENTA).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PINK_PAINTED_PLANKS = registryBlock("pink_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PINK).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BROWN_PAINTED_PLANKS = registryBlock("brown_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLACK_PAINTED_PLANKS = registryBlock("black_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GRAY_PAINTED_PLANKS = registryBlock("gray_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GRAY).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_PLANKS = registryBlock("light_gray_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GRAY).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> WHITE_PAINTED_PLANKS = registryBlock("white_painted_planks", () -> new Block(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SNOW).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    //Painted Planks Stairs
    public static final RegistryObject<Block> RED_PAINTED_PLANKS_STAIRS = registryBlock("red_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.RED_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> ORANGE_PAINTED_PLANKS_STAIRS= registryBlock("orange_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.ORANGE_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> YELLOW_PAINTED_PLANKS_STAIRS= registryBlock("yellow_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.YELLOW_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_YELLOW).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIME_PAINTED_PLANKS_STAIRS= registryBlock("lime_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.LIME_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GREEN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GREEN_PAINTED_PLANKS_STAIRS= registryBlock("green_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.GREEN_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GREEN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> CYAN_PAINTED_PLANKS_STAIRS= registryBlock("cyan_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.CYAN_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_CYAN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_PLANKS_STAIRS= registryBlock("light_blue_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.LIGHT_BLUE_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_BLUE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLUE_PAINTED_PLANKS_STAIRS= registryBlock("blue_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.BLUE_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLUE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PURPLE_PAINTED_PLANKS_STAIRS= registryBlock("purple_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.PURPLE_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PURPLE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> MAGENTA_PAINTED_PLANKS_STAIRS= registryBlock("magenta_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.MAGENTA_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_MAGENTA).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PINK_PAINTED_PLANKS_STAIRS= registryBlock("pink_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.PINK_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PINK).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BROWN_PAINTED_PLANKS_STAIRS= registryBlock("brown_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.BROWN_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLACK_PAINTED_PLANKS_STAIRS= registryBlock("black_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.BLACK_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GRAY_PAINTED_PLANKS_STAIRS= registryBlock("gray_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.GRAY_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GRAY).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_PLANKS_STAIRS= registryBlock("light_gray_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.LIGHT_GRAY_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GRAY).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> WHITE_PAINTED_PLANKS_STAIRS= registryBlock("white_painted_planks_stairs", () -> new StairBlock(() -> ModBlocks.WHITE_PAINTED_PLANKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SNOW).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    //Painted Planks Slabs
    public static final RegistryObject<Block> RED_PAINTED_PLANKS_SLAB = registryBlock("red_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> ORANGE_PAINTED_PLANKS_SLAB = registryBlock("orange_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> YELLOW_PAINTED_PLANKS_SLAB = registryBlock("yellow_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_YELLOW).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIME_PAINTED_PLANKS_SLAB = registryBlock("lime_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GREEN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GREEN_PAINTED_PLANKS_SLAB = registryBlock("green_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GREEN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> CYAN_PAINTED_PLANKS_SLAB = registryBlock("cyan_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_CYAN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_PLANKS_SLAB = registryBlock("light_blue_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_BLUE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLUE_PAINTED_PLANKS_SLAB = registryBlock("blue_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLUE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PURPLE_PAINTED_PLANKS_SLAB = registryBlock("purple_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PURPLE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> MAGENTA_PAINTED_PLANKS_SLAB = registryBlock("magenta_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_MAGENTA).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PINK_PAINTED_PLANKS_SLAB = registryBlock("pink_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PINK).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BROWN_PAINTED_PLANKS_SLAB = registryBlock("brown_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLACK_PAINTED_PLANKS_SLAB = registryBlock("black_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GRAY_PAINTED_PLANKS_SLAB = registryBlock("gray_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GRAY).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_PLANKS_SLAB = registryBlock("light_gray_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GRAY).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> WHITE_PAINTED_PLANKS_SLAB = registryBlock("white_painted_planks_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SNOW).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_BUILDING_BLOCKS);
    //Painted Planks Fences
    public static final RegistryObject<Block> RED_PAINTED_FENCE = registryBlock("red_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> ORANGE_PAINTED_FENCE = registryBlock("orange_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> YELLOW_PAINTED_FENCE = registryBlock("yellow_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_YELLOW).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> LIME_PAINTED_FENCE = registryBlock("lime_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GREEN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> GREEN_PAINTED_FENCE = registryBlock("green_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GREEN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> CYAN_PAINTED_FENCE = registryBlock("cyan_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_CYAN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_FENCE = registryBlock("light_blue_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_BLUE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> BLUE_PAINTED_FENCE = registryBlock("blue_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLUE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> PURPLE_PAINTED_FENCE = registryBlock("purple_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PURPLE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> MAGENTA_PAINTED_FENCE = registryBlock("magenta_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_MAGENTA).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> PINK_PAINTED_FENCE = registryBlock("pink_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PINK).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> BROWN_PAINTED_FENCE = registryBlock("brown_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> BLACK_PAINTED_FENCE = registryBlock("black_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> GRAY_PAINTED_FENCE = registryBlock("gray_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GRAY).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_FENCE = registryBlock("light_gray_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GRAY).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> WHITE_PAINTED_FENCE = registryBlock("white_painted_fence", () -> new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SNOW).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_DECORATIONS);
    //Painted Planks Fence Gates
    public static final RegistryObject<Block> RED_PAINTED_FENCE_GATE = registryBlock("red_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> ORANGE_PAINTED_FENCE_GATE = registryBlock("orange_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> YELLOW_PAINTED_FENCE_GATE = registryBlock("yellow_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_YELLOW).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIME_PAINTED_FENCE_GATE = registryBlock("lime_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GREEN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> GREEN_PAINTED_FENCE_GATE = registryBlock("green_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GREEN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> CYAN_PAINTED_FENCE_GATE = registryBlock("cyan_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_CYAN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_FENCE_GATE = registryBlock("light_blue_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_BLUE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BLUE_PAINTED_FENCE_GATE = registryBlock("blue_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLUE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> PURPLE_PAINTED_FENCE_GATE = registryBlock("purple_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PURPLE).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> MAGENTA_PAINTED_FENCE_GATE = registryBlock("magenta_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_MAGENTA).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> PINK_PAINTED_FENCE_GATE = registryBlock("pink_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PINK).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BROWN_PAINTED_FENCE_GATE = registryBlock("brown_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BLACK_PAINTED_FENCE_GATE = registryBlock("black_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> GRAY_PAINTED_FENCE_GATE = registryBlock("gray_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GRAY).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_FENCE_GATE = registryBlock("light_gray_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GRAY).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> WHITE_PAINTED_FENCE_GATE = registryBlock("white_painted_fence_gate", () -> new FenceGateBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SNOW).strength(2.0F, 3.0F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    //Painted Button
    public static final RegistryObject<Block> RED_PAINTED_BUTTON = registryBlock("red_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> ORANGE_PAINTED_BUTTON = registryBlock("orange_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> YELLOW_PAINTED_BUTTON = registryBlock("yellow_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIME_PAINTED_BUTTON = registryBlock("lime_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> GREEN_PAINTED_BUTTON = registryBlock("green_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> CYAN_PAINTED_BUTTON = registryBlock("cyan_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_BUTTON = registryBlock("light_blue_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BLUE_PAINTED_BUTTON = registryBlock("blue_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> PURPLE_PAINTED_BUTTON = registryBlock("purple_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> MAGENTA_PAINTED_BUTTON = registryBlock("magenta_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> PINK_PAINTED_BUTTON = registryBlock("pink_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BROWN_PAINTED_BUTTON = registryBlock("brown_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BLACK_PAINTED_BUTTON = registryBlock("black_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> GRAY_PAINTED_BUTTON = registryBlock("gray_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_BUTTON = registryBlock("light_gray_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> WHITE_PAINTED_BUTTON = registryBlock("white_painted_button", () -> new WoodButtonBlock(BlockBehaviour.Properties.of(Material.DECORATION).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    //Painted Pressure Plate
    public static final RegistryObject<Block> RED_PAINTED_PRESSURE_PLATE = registryBlock("red_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, RED_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> ORANGE_PAINTED_PRESSURE_PLATE = registryBlock("orange_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, ORANGE_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> YELLOW_PAINTED_PRESSURE_PLATE = registryBlock("yellow_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, YELLOW_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIME_PAINTED_PRESSURE_PLATE = registryBlock("lime_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, LIME_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> GREEN_PAINTED_PRESSURE_PLATE = registryBlock("green_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, GREEN_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> CYAN_PAINTED_PRESSURE_PLATE = registryBlock("cyan_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, CYAN_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_PRESSURE_PLATE = registryBlock("light_blue_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, LIGHT_BLUE_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BLUE_PAINTED_PRESSURE_PLATE = registryBlock("blue_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, BLUE_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> PURPLE_PAINTED_PRESSURE_PLATE = registryBlock("purple_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, PURPLE_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> MAGENTA_PAINTED_PRESSURE_PLATE = registryBlock("magenta_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, MAGENTA_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> PINK_PAINTED_PRESSURE_PLATE = registryBlock("pink_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, PINK_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BROWN_PAINTED_PRESSURE_PLATE = registryBlock("brown_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, BROWN_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BLACK_PAINTED_PRESSURE_PLATE = registryBlock("black_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, BLACK_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> GRAY_PAINTED_PRESSURE_PLATE = registryBlock("gray_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, GRAY_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_PRESSURE_PLATE = registryBlock("light_gray_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, LIGHT_BLUE_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> WHITE_PAINTED_PRESSURE_PLATE = registryBlock("white_painted_pressure_plate", () -> new PressurePlateBlock(PressurePlateBlock.Sensitivity.EVERYTHING, BlockBehaviour.Properties.of(Material.WOOD, WHITE_PAINTED_PLANKS.get().defaultMaterialColor()).noCollission().strength(0.5F).sound(SoundType.WOOD)), CreativeModeTab.TAB_REDSTONE);
    //Painted Door
    public static final RegistryObject<Block> RED_PAINTED_DOOR = registryBlock("red_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, RED_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> ORANGE_PAINTED_DOOR = registryBlock("orange_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, ORANGE_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion().noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> YELLOW_PAINTED_DOOR = registryBlock("yellow_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, YELLOW_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion().noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIME_PAINTED_DOOR = registryBlock("lime_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, LIME_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion().noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> GREEN_PAINTED_DOOR = registryBlock("green_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, GREEN_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> CYAN_PAINTED_DOOR = registryBlock("cyan_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, CYAN_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_DOOR = registryBlock("light_blue_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, LIGHT_BLUE_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BLUE_PAINTED_DOOR = registryBlock("blue_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, BLUE_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> PURPLE_PAINTED_DOOR = registryBlock("purple_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, PURPLE_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> MAGENTA_PAINTED_DOOR = registryBlock("magenta_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MAGENTA_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> PINK_PAINTED_DOOR = registryBlock("pink_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, PINK_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BROWN_PAINTED_DOOR = registryBlock("brown_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, BROWN_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BLACK_PAINTED_DOOR = registryBlock("black_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, BLACK_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> GRAY_PAINTED_DOOR = registryBlock("gray_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, GRAY_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_DOOR = registryBlock("light_gray_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, LIGHT_BLUE_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> WHITE_PAINTED_DOOR = registryBlock("white_painted_door", () -> new DoorBlock(BlockBehaviour.Properties.of(Material.WOOD, WHITE_PAINTED_PLANKS.get().defaultMaterialColor()).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    //Painted Trapdoor
    public static final RegistryObject<Block> RED_PAINTED_TRAPDOOR = registryBlock("red_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_RED).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> ORANGE_PAINTED_TRAPDOOR = registryBlock("orange_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> YELLOW_PAINTED_TRAPDOOR = registryBlock("yellow_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_YELLOW).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIME_PAINTED_TRAPDOOR = registryBlock("lime_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GREEN).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> GREEN_PAINTED_TRAPDOOR = registryBlock("green_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GREEN).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> CYAN_PAINTED_TRAPDOOR = registryBlock("cyan_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_CYAN).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_TRAPDOOR = registryBlock("light_blue_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_BLUE).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BLUE_PAINTED_TRAPDOOR = registryBlock("blue_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLUE).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> PURPLE_PAINTED_TRAPDOOR = registryBlock("purple_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PURPLE).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> MAGENTA_PAINTED_TRAPDOOR = registryBlock("magenta_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_MAGENTA).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> PINK_PAINTED_TRAPDOOR = registryBlock("pink_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_PINK).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BROWN_PAINTED_TRAPDOOR = registryBlock("brown_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> BLACK_PAINTED_TRAPDOOR = registryBlock("black_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BLACK).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> GRAY_PAINTED_TRAPDOOR = registryBlock("gray_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GRAY).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_TRAPDOOR = registryBlock("light_gray_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_LIGHT_GRAY).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    public static final RegistryObject<Block> WHITE_PAINTED_TRAPDOOR = registryBlock("white_painted_trapdoor", () -> new TrapDoorBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SNOW).strength(3.0F).sound(SoundType.WOOD).noOcclusion()), CreativeModeTab.TAB_REDSTONE);
    //Painted Bricks
    public static final RegistryObject<Block> RED_PAINTED_BRICKS = registryBlock("red_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> ORANGE_PAINTED_BRICKS = registryBlock("orange_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> YELLOW_PAINTED_BRICKS = registryBlock("yellow_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_YELLOW).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIME_PAINTED_BRICKS = registryBlock("lime_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_LIGHT_GREEN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GREEN_PAINTED_BRICKS = registryBlock("green_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_GREEN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> CYAN_PAINTED_BRICKS = registryBlock("cyan_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_CYAN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_BRICKS = registryBlock("light_blue_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_LIGHT_BLUE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLUE_PAINTED_BRICKS = registryBlock("blue_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLUE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PURPLE_PAINTED_BRICKS = registryBlock("purple_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_PURPLE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> MAGENTA_PAINTED_BRICKS = registryBlock("magenta_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_MAGENTA).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PINK_PAINTED_BRICKS = registryBlock("pink_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_PINK).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BROWN_PAINTED_BRICKS = registryBlock("brown_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BROWN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLACK_PAINTED_BRICKS = registryBlock("black_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GRAY_PAINTED_BRICKS = registryBlock("gray_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_GRAY).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_BRICKS = registryBlock("light_gray_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_LIGHT_GRAY).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> WHITE_PAINTED_BRICKS = registryBlock("white_painted_bricks", () -> new Block(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SNOW).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    //Painted Brick Stairs
    public static final RegistryObject<Block> RED_PAINTED_BRICK_STAIRS = registryBlock("red_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.RED_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(2.0F, 3.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> ORANGE_PAINTED_BRICK_STAIRS = registryBlock("orange_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.ORANGE_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> YELLOW_PAINTED_BRICK_STAIRS = registryBlock("yellow_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.YELLOW_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_YELLOW).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIME_PAINTED_BRICK_STAIRS = registryBlock("lime_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.LIME_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_LIGHT_GREEN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GREEN_PAINTED_BRICK_STAIRS = registryBlock("green_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.GREEN_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_GREEN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> CYAN_PAINTED_BRICK_STAIRS = registryBlock("cyan_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.CYAN_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_CYAN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_BRICK_STAIRS = registryBlock("light_blue_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.LIGHT_BLUE_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_LIGHT_BLUE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLUE_PAINTED_BRICK_STAIRS = registryBlock("blue_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.BLUE_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLUE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PURPLE_PAINTED_BRICK_STAIRS = registryBlock("purple_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.PURPLE_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_PURPLE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> MAGENTA_PAINTED_BRICK_STAIRS = registryBlock("magenta_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.MAGENTA_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_MAGENTA).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PINK_PAINTED_BRICK_STAIRS = registryBlock("pink_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.PINK_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_PINK).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BROWN_PAINTED_BRICK_STAIRS = registryBlock("brown_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.BROWN_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BROWN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLACK_PAINTED_BRICK_STAIRS = registryBlock("black_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.BLACK_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GRAY_PAINTED_BRICK_STAIRS = registryBlock("gray_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.GRAY_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_GRAY).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_BRICK_STAIRS = registryBlock("light_gray_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.LIGHT_GRAY_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_LIGHT_GRAY).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> WHITE_PAINTED_BRICK_STAIRS = registryBlock("white_painted_brick_stairs", () -> new StairBlock(() -> ModBlocks.WHITE_PAINTED_BRICKS.get().defaultBlockState(), BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SNOW).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    //Painted Brick Slabs
    public static final RegistryObject<Block> RED_PAINTED_BRICK_SLAB = registryBlock("red_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_RED).strength(2.0F, 3.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> ORANGE_PAINTED_BRICK_SLAB = registryBlock("orange_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_ORANGE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> YELLOW_PAINTED_BRICK_SLAB = registryBlock("yellow_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_YELLOW).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIME_PAINTED_BRICK_SLAB = registryBlock("lime_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_LIGHT_GREEN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GREEN_PAINTED_BRICK_SLAB = registryBlock("green_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_GREEN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> CYAN_PAINTED_BRICK_SLAB = registryBlock("cyan_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_CYAN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_BRICK_SLAB = registryBlock("light_blue_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_LIGHT_BLUE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLUE_PAINTED_BRICK_SLAB = registryBlock("blue_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLUE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PURPLE_PAINTED_BRICK_SLAB = registryBlock("purple_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_PURPLE).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> MAGENTA_PAINTED_BRICK_SLAB = registryBlock("magenta_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_MAGENTA).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> PINK_PAINTED_BRICK_SLAB = registryBlock("pink_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_PINK).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BROWN_PAINTED_BRICK_SLAB = registryBlock("brown_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BROWN).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> BLACK_PAINTED_BRICK_SLAB = registryBlock("black_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_BLACK).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> GRAY_PAINTED_BRICK_SLAB = registryBlock("gray_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_GRAY).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_BRICK_SLAB = registryBlock("light_gray_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.COLOR_LIGHT_GRAY).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    public static final RegistryObject<Block> WHITE_PAINTED_BRICK_SLAB = registryBlock("white_painted_brick_slab", () -> new SlabBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.SNOW).strength(2.0F, 6.0F).sound(SoundType.STONE).requiresCorrectToolForDrops()), CreativeModeTab.TAB_BUILDING_BLOCKS);
    //Painted Brick Walls
    public static final RegistryObject<Block> RED_PAINTED_BRICK_WALL = registryBlock("red_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.RED_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> ORANGE_PAINTED_BRICK_WALL = registryBlock("orange_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.ORANGE_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> YELLOW_PAINTED_BRICK_WALL = registryBlock("yellow_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.YELLOW_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> LIME_PAINTED_BRICK_WALL = registryBlock("lime_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.LIME_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> GREEN_PAINTED_BRICK_WALL = registryBlock("green_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.GREEN_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> CYAN_PAINTED_BRICK_WALL = registryBlock("cyan_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.CYAN_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> LIGHT_BLUE_PAINTED_BRICK_WALL = registryBlock("light_blue_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.LIGHT_BLUE_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> BLUE_PAINTED_BRICK_WALL = registryBlock("blue_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.BLUE_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> PURPLE_PAINTED_BRICK_WALL = registryBlock("purple_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.PURPLE_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> MAGENTA_PAINTED_BRICK_WALL = registryBlock("magenta_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.MAGENTA_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> PINK_PAINTED_BRICK_WALL = registryBlock("pink_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.PINK_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> BROWN_PAINTED_BRICK_WALL = registryBlock("brown_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.BROWN_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> BLACK_PAINTED_BRICK_WALL = registryBlock("black_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.BLACK_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> GRAY_PAINTED_BRICK_WALL = registryBlock("gray_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.GRAY_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> LIGHT_GRAY_PAINTED_BRICK_WALL = registryBlock("light_gray_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.LIGHT_GRAY_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    public static final RegistryObject<Block> WHITE_PAINTED_BRICK_WALL = registryBlock("white_painted_brick_wall", () -> new WallBlock(BlockBehaviour.Properties.copy(ModBlocks.WHITE_PAINTED_BRICKS.get())), CreativeModeTab.TAB_DECORATIONS);
    private static <T extends Block> RegistryObject<T> registryBlock(String name, Supplier<T> block, CreativeModeTab tab ) {
        RegistryObject<T> toReturn = BLOCKS.register(name, block);
        registerBlockItem(name, toReturn, tab);
        return toReturn;
    };

    private static <T extends Block>  RegistryObject<Item> registerBlockItem(String name, RegistryObject<T> block, CreativeModeTab tab){

        return ModItems.ITEMS.register(name, () -> new BlockItem(block.get(), new Item.Properties().tab(tab)));
    }

    public static void register(IEventBus eventBus) {
        BLOCKS.register(eventBus);
    }

}
